#!/bin/sh
# Commands related to building or installing Oblong packages on Linux, Mac, and Windows
# FIXME: hoist them out of obs_funcs.sh into individual files so we don't need this wrapper?
set -e

usage() {
    echo "Usage: obs verb [args]"
    echo "obs detect_ncores           - get number of CPU cores this computer has"
    echo "obs detect_os               - get our os type/version identifier for the current os"
    echo "obs get_major_version_git   - get major version number of current project from heavyweight git tags"
    echo "obs get_version_git         - get version number of current project from heavyweight git tags"
    echo "obs install pkg ...         - install tarball packages from $MASTER"
    echo "obs download pkg ...        - download but do not unpack tarball packages from $MASTER"
    echo "obs list                    - list tarball packages available to install for $_os from $MASTER"
    echo "obs yovo2cefversion VERSION - look up which version of cef the given version of g-speak (well, webthing) depends on"
    echo "obs yovo2yoversion VERSION  - look up which version of yobuild the given version of g-speak depends on"
}

# If obs is properly installed, obs_funcs.sh will be on PATH
# but during development, we want to read obs_funcs.sh from same directory as obs, overriding installed one
SRCFILE="`readlink $0 2>/dev/null || echo $0`"
case "$SRCFILE" in
./obs) . ./obs_funcs.sh;;
*)     . obs_funcs.sh;;
esac

cmd="$1"
case "$cmd" in
--help|"") usage; exit 0;;
esac
shift

case "$cmd" in
detect_ncores)         bs_detect_ncores;;
detect_os)             echo $_os ;; # bs_detect_os already called
get_major_version_git) bs_get_major_version_git;;
get_version_git)       bs_get_version_git;;
install)               bs_install $@;;
download)              bs_download $@;;
pkg_list|list)         bs_pkg_list;;
yovo2cefversion)       bs_yovo2cefversion $@;;
yovo2yoversion)        bs_yovo2yoversion $@;;
*)                     echo "Unknown cmd $cmd"; usage; exit 1;;
esac
