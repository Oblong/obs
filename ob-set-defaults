#!/bin/sh
# Sets persistant source options in debian directory.
#
# Run to select a different version of g-speak or change cmake options.
# NOTE: use --hard if you want to change default g-speak version in git!
#
# Generic, should work for most projects that depend on g-speak.
# However, if your project needs different behavior, you have two choices:
# 1) Override this script entirely by creating the file set-gspeak.sh
# at the top of your project and putting your private version there.
# 2) Tweak defaults by defining the file ci/ob-set-defaults.conf
# containing lines like
#    PREFIX=/opt/oblong/my-funky-dir
# (see Tweakable Defaults below)

# Verify invariants
sanitycheck() {
  # This may be overkill, and should probably be moved into ob-set-defaults.bats
  if grep -E '/opt/oblong/g-speak(-as|-gh|-ts)' debian/*
  then
    bs_abort "bad path"
  fi
}

# Append one of -as, -ts, or -gh to 'suffix', in alphabetical order
append_suffix() {
  temp=$(printf %s "$suffix$1" | tr '-' '\012' | sort -u | grep -v '^$' | sed 's/^/-/' | tr -d '\012')
  suffix="$temp"
}

usage() {
    cat <<_EOF_
Usage: ob-set-defaults [options]
Sets default generic build parameters for this project.

Sticky options (ones that change the package name):
  --cef branch   - which version of cef to build against
  --greenhouse   - sets -DGREENHOUSE=on -DUSE_STATIC_G_SPEAK=on -DCMAKE_INSTALL_PREFIX=/opt/oblong/greenhouse, -gh tag
  --g-speak VER  - which version of g-speak to build against
  --mezz VER     - which version of mezzanine to build against
Specifying --g-speak resets --cef and -greenhouse to defaults if they aren't also specified.

Options:
  -v             - verbose
  --hard         - use 'git mv' instead of 'mv' when renaming debian files
  --asan         - alias for -DASAN=on
  --coverage     - alias for -DCOVERAGE=on
  --debug        - alias for -DCMAKE_BUILD_TYPE=Debug
  --make         - generate Makefiles and build with make
  --ninja        - generate build.ninja and build with ninja
  --no-tests     - alias for -DBUILD_TESTS=off
  --prefix DIR   - where to install
  --rel          - alias for -DCMAKE_BUILD_TYPE=Release
  --reldeb       - alias for -DCMAKE_BUILD_TYPE=ReleaseWithDebInfo
  --tsan         - alias for -DTSAN=on
  --xcode        - generate XCode project and build with XCode
  --no-major     - don't append major version number to package name
  --major N      - append given major version number to package name
  -Dfoo=bar      - passed through to cmake with doublequotes

--cef, --g-speak, and --mezz are 'sticky', and keep their value on next run
even if you don't specify them again.

The --g-speak option also resets cef version to the default value for that
version of g-speak unless you also use --cef.

If this command renames files in the debian directory, it will
tell you, and remind you about the --hard option (which can save
you trouble when committing).
_EOF_
}

# Project defined a set-mezzanine.sh, so call that instead.
fallback_to_classic_mezzanine() {
    echo "Found local set-mezzanine.sh, running that instead"

    # Adjust args to match old interface
    local verbose
    local mezz_version
    while true
    do
       case "$1" in
       -v)         verbose=-x;;
       --mezz)  shift; mezz_version=$1;;
       --hard)
           # makes --g-speak more emphatic and check-in-able
           # Let caller specify it via 'GITCMD=git' for backward compatibility
           export GITCMD=git
           ;;
       *) break;;
       esac
       shift
    done
    exec sh $verbose set-mezzanine.sh "$mezz_version" "$@"
}

# Project defined a set-gspeak.sh, so call that instead.
# Restriction: -v and/or --g-speak must come first.
fallback_to_classic() {
    # Adjust args to match old interface
    local verbose
    local gspeak_version
    local cef_version
    local gh_opt
    while true
    do
       case "$1" in
       -v)         verbose=-x;;
       --g-speak)  shift; gspeak_version=$1;;
       --greenhouse) gh_opt=$1;;
       --cef)      shift; cef_version="--cef $1";;
       --hard)
           # makes --g-speak more emphatic and check-in-able
           # Let caller specify it via 'GITCMD=git' for backward compatibility
           export GITCMD=git
           ;;
       *) break;;
       esac
       shift
    done
    echo "Found local set-gspeak.sh, running 'sh $verbose set-gspeak.sh $gspeak_version $cef_version $gh_opt'"
    exec sh $verbose set-gspeak.sh "$gspeak_version" $cef_version $gh_opt
}

# Let project override by defining set-gspeak.sh (as in days of yore)
case "$*" in
*--g-speak*)
  if test -f set-gspeak.sh
  then
    fallback_to_classic "$@"
  fi
  ;;
*--mezz*)
  if test -f set-mezzanine.sh
  then
    fallback_to_classic_mezzanine "$@"
  fi
  ;;
esac

# Give help before doing anything that might fail
case "$1" in
""|-h|--help|help) usage; exit 0;;
esac

# This is part of oblong's obs package
# See https://github.com/Oblong/obs
. obs_funcs.sh

set -e

case "$(uname -s)" in
Darwin) sed="gsed -E"; if ! gsed --version; then bs_abort "please install gnu-sed"; fi;;
*) sed="sed -E";;
esac

# Tweakable Defaults
# The defaults that can be overridden by ob-set-defaults.conf
gspeak_version=""
mezz_version=""
opt_greenhouse=false
G_SPEAK_HOME=""
PREFIX=""
YOBUILD=""
YOVERSION=""
cefbranch=""
extra_cmake_options=""
opt_generator="Ninja"
opt_no_major=false
suffix=""

# Load project-specific defaults, if any
if test -f ci/ob-set-defaults.conf
then
    echo "Loading ci/ob-set-defaults.conf"
    . ci/ob-set-defaults.conf
fi

while test "$1" != ""
do
    case "$1" in
    -v) set -x
        ;;
    --greenhouse)
        opt_greenhouse=true
        ;;
    --g-speak)
        shift
        gspeak_version=$1
        ;;
    --mezz)
        shift
        mezz_version=$1
        ;;
    --hard)
        # makes --g-speak more emphatic and check-in-able
        # Let caller specify it via 'GITCMD=git' for backward compatibility
        GITCMD=git
        ;;
    -D*!*)
        echo "Sorry, exclamation marks and embedded single quotes are not supported here in cmake options"
        exit 1
        ;;
    -D*)
        extra_cmake_options="$extra_cmake_options $1"
        ;;
    --asan)
        extra_cmake_options="$extra_cmake_options -DASAN=on"
        append_suffix -as
        ;;
    --tsan)
        extra_cmake_options="$extra_cmake_options -DTSAN=on"
        append_suffix -ts
        ;;
    --cef)
        shift
        cefbranch=cef$1
        ;;
    --coverage)
        extra_cmake_options="$extra_cmake_options -DCOVERAGE=on"
        ;;
    --debug)
        extra_cmake_options="$extra_cmake_options -DCMAKE_BUILD_TYPE=Debug"
        ;;
    --rel)
        extra_cmake_options="$extra_cmake_options -DCMAKE_BUILD_TYPE=Release"
        ;;
    --reldeb)
        extra_cmake_options="$extra_cmake_options -DCMAKE_BUILD_TYPE=ReleaseWithDebInfo"
        ;;
    --major)
        shift
        opt_major="$1"
        ;;
    --make)
        opt_generator="Unix Makefiles"
        ;;
    --ninja)
        opt_generator="Ninja"
        ;;
    --no-major)
        opt_no_major=true
        ;;
    --prefix)
        shift
        PREFIX="$1"
        ;;
    --vs)
        opt_toolchain=$(bs_detect_toolchain)
        case $opt_toolchain in
        msvc2010) opt_generator="Visual Studio 10 2010";;
        msvc2013) opt_generator="Visual Studio 12 2013";;
        msvc2015) opt_generator="Visual Studio 14 2015";;
        *) bs_abort "ob-set-defaults: unknown compiler $opt_toolchain";;
        esac
        ;;
    --xcode)
        opt_generator="Xcode"
        ;;
    --no-tests)
        extra_cmake_options="$extra_cmake_options -DBUILD_TESTS=off"
        ;;
    *)
        usage
        exit 1
        ;;
    esac
    shift
done

# The version-changing options are sensitive to debris left
# behind in the debian directory by builds, so abort early
# if that's likely to be a problem.
if test "$mezz_version" != "" || test "$gspeak_version" != ""
then
    if ls debian/*.bak 2>/dev/null || ls debian/*.debhelper 2>/dev/null
    then
        bs_abort "Please remove debris (e.g. .bak, .debhelper) from debian directory, e.g. with 'bau clean', 'git clean -f', and/or 'dh clean'"
    fi
fi

BITS=$(getconf LONG_BIT)
if test "$gspeak_version" = ""
then
    gspeak_specified=false
    # Keep old version, if any, as this is a sticky option
    gspeak_version=$(bs_get_gspeak_version)
else
    gspeak_specified=true
fi

# Greenhouse is true if the option was given on commandline
# OR if --g-speak was not given but package name indicates greenhouseness.
if ! $gspeak_specified && bs_is_greenhouse
then
    opt_greenhouse=true
fi

if $opt_greenhouse
then
    # In project greenhouse, also need to specify --prefix /opt/oblong/greenhouse to match old set-gspeak.sh behavior
    append_suffix -gh
    # everybody's set-gspeak took --greenhouse to mean G_SPEAK_HOME=/opt/oblong/greenhouse PREFIX=/opt/oblong/greenhouse
    G_SPEAK_HOME=/opt/oblong/greenhouse
    PREFIX=/opt/oblong/greenhouse
    # yovo and staging's cmake needed -DGREENHOUSE=on; everyone else's cmake needs -DUSE_STATIC_G_SPEAK=on
    extra_cmake_options="$extra_cmake_options -DUSE_STATIC_G_SPEAK=on -DGREENHOUSE=on"
fi

if test "$G_SPEAK_HOME" = ""
then
    G_SPEAK_HOME=/opt/oblong/g-speak$gspeak_version
fi

pkgname=$(awk '/Source:/ {print $2};' < debian/control)
projname=$(echo "$pkgname" | $sed 's/oblong-gs[0-9.]*(-as|-gh|-ts)*-//;s/^(-as|-gh|-ts)*//g;s/-gs.*//;s/(-as|-gh|-ts)*//g')

if test "$opt_major" != ""
then
    version_major="$opt_major"
elif $opt_no_major
then
    version_major=""
else
    # Allow multiple major versions of this package to coexist in repo by using major version number as suffix on package name
    version_major=$(bs_get_major_version_git)
fi

sanitycheck

#-------------------- PREFIX --------------------------
# This is the only section that changes install prefix.

if test "$PREFIX" = ""
then
    if $gspeak_specified
    then
        PREFIX="$G_SPEAK_HOME"    # FIXME: use bs_get_prefix ?
    fi
fi

if test "$PREFIX" != ""
then
   # Replace PREFIX= with the right value in all files that contain it
   # Note: debian/install and debian/*.install do not belong in this list
   find \
        debian/rules \
        debian/control \
        debian/.gitignore \
        debian/*.alternatives \
        debian/*.lintian-overrides \
        debian/*.postinst \
        debian/*.postrm \
        debian/*.preinst \
        debian/*.prerm \
        debian/*.service \
        debian/*.upstart \
      -exec egrep -q \
            -e "^PREFIX=" \
            \{} \; \
      -exec $sed -i \
            -e "s,^PREFIX=.*,PREFIX=$PREFIX," \
            \{} \; \
      2>/dev/null || true

   # Special case for debian/install and debian/*.install
   # Only affects yovo currently; staging and greenhouse only have e.g. 'opt' in debian/foo.install.
   PREFIX_NOSLASH="$(echo $PREFIX | sed 's,^/,,')"
   find \
        debian/install \
        debian/*.install \
      -exec egrep -q \
            -e 'opt/oblong' \
            \{} \; \
      -exec $sed -i \
            -e "s%opt/oblong/g-speak(-as|-gh|-ts)*[1-9]\\.[0-9]*%${PREFIX_NOSLASH}%" \
            -e "s%opt/oblong/greenhouse%${PREFIX_NOSLASH}%" \
            \{} \; \
      2>/dev/null || true
fi

#-------------------- G_SPEAK_HOME --------------------------
# This is the only section that changes G_SPEAK_HOME.

sanitycheck
if test "$G_SPEAK_HOME" != ""
then
   # Replace G_SPEAK_HOME= with the right value in all scripts that contain it
   # Note: debian/install and debian/*.install do not belong in this list
   find \
        debian/rules \
        debian/*.postinst \
        debian/*.postrm \
        debian/*.preinst \
        debian/*.prerm \
      -exec egrep -q \
            -e "^G_SPEAK_HOME *=" \
            "{}" \; \
      -exec $sed -i \
            -e "s,^G_SPEAK_HOME=.*,G_SPEAK_HOME=$G_SPEAK_HOME," \
            "{}" \; \
      2>/dev/null || true

   # Special case for debian/install and debian/*.install
   # Only affects yovo currently; staging and greenhouse only have e.g. 'opt' in debian/foo.install.
   # Already handled by PREFIX case above, since yovo always has PREFIX=G_SPEAK_HOME

   # Special case for debian/*.upstart and debian/*.service
   # These files are harder since they don't really support variables, and the path is just embedded;
   # but in all cases so far, the path is always followed by /bin
   find \
        debian/*.upstart \
        debian/*.service \
      -exec egrep -q \
            -e 'opt/oblong' \
            "{}" \; \
      -exec $sed -i \
            -e "s%/opt/oblong/g-speak[^ ]*/bin%${G_SPEAK_HOME}/bin%" \
            -e "s%/opt/oblong/greenhouse/bin%${G_SPEAK_HOME}/bin%" \
            "{}" \; \
      2>/dev/null || true
fi

#-------------------- YOVERSION -----------------------
# This is almost the only section that changes yobuild version number.
# (The renames several pages down also do, and rely on the value of YOVERSION set here,
#  but are careful to not edit YOVERSION if it's not set.)

sanitycheck
if test "$YOVERSION" = ""
then
    if test "$gspeak_version" != ""
    then
        YOVERSION=$(bs_yovo2yoversion "$gspeak_version")
    fi
fi

if test "$YOVERSION" != ""
then
   find \
        debian/rules \
        debian/control \
        debian/.gitignore \
        debian/*.alternatives \
        debian/*.lintian-overrides \
        debian/*.postinst \
        debian/*.postrm \
        debian/*.preinst \
        debian/*.prerm \
        debian/*.service \
        debian/*.upstart \
      -exec egrep -q \
            -e 'deps-[0-9]+-[0-9]+' \
            -e '-yb[0-9]' \
            -e '-yobuild' \
            \{} \; \
      -exec $sed -i \
            -e "s,deps-[0-9]*-[0-9]*,deps-$BITS-$YOVERSION," \
            -e "s,-yb[0-9]*,-yb$YOVERSION," \
            -e "s,-yobuild[0-9]*,-yobuild$YOVERSION," \
            \{} \; \
      2>/dev/null || true

    # Only want to change 1st line of changelog
    $sed -i \
        -e "1s/oblong-yobuild[0-9]*/oblong-yobuild$YOVERSION/" \
        debian/changelog \
        #
fi

#-------------------- YOBUILD -----------------------
# This is the only section that changes yobuild install prefix.

sanitycheck
if test "$YOBUILD" = ""
then
    # KLUDGE: g-speak implies yobuild
    if test "$gspeak_version" != ""
    then
        # FIXME: doesn't work in general case
        YOBUILD=$(bs_get_yobuild_home "$gspeak_version")
    fi
fi

if test "$YOBUILD" != ""
then
   YOBUILD_NOSLASH="$(echo "$YOBUILD" | sed 's,^/,,')"
   find \
        debian/control \
        debian/install \
        debian/rules \
        debian/.gitignore \
        debian/*.alternatives \
        debian/*.install \
        debian/*.lintian-overrides \
        debian/*.postinst \
        debian/*.postrm \
        debian/*.preinst \
        debian/*.prerm \
        debian/*.service \
        debian/*.upstart \
      -exec egrep -q \
            -e "opt/oblong" \
            -e "^YOBUILD=" \
            \{} \; \
      -exec $sed -i \
            -e "s,opt/oblong/deps-[0-9]*-[0-9]*,$YOBUILD_NOSLASH," \
            -e "s,^YOBUILD=.*,YOBUILD=$YOBUILD," \
            \{} \; \
      2>/dev/null || true
fi

#-------------------- cefbranch -----------------------
# This is almost the only section that changes cefbranch.
# (The renames several pages down also do, and rely on the value of cefbranch set here,
#  but are careful to not edit cefbranch if it's not set.)
# Note: for poor historical reasons, the cefbranch variable in some
# scripts as well as the output of bs_yovo2cefversion include
# the literal prefix "cef".  They probably shouldn't anymore.
# Other scripts don't already.  It's a bit confusing.

sanitycheck
if test "$cefbranch" = ""
then
    # --cef not specified.
    # Switch to default version if --g-speak was given
    if $gspeak_specified
    then
        cefbranch=$(bs_yovo2cefversion "$gspeak_version")
    fi
fi

if test "$cefbranch" != ""
then
   barecefbranch=$(echo $cefbranch | sed 's/cef//')
   find \
        debian/rules \
        debian/control \
        debian/install \
        debian/.gitignore \
        debian/*.alternatives \
        debian/*.install \
        debian/*.lintian-overrides \
        debian/*.postinst \
        debian/*.postrm \
        debian/*.preinst \
        debian/*.prerm \
        debian/*.service \
        debian/*.upstart \
      -exec egrep -q \
            -e "-cef[1-9]" \
            -e "/cef[1-9]" \
            -e "^cefbranch=[1-9]" \
            -e "^cefbranch=cef[1-9]" \
            \{} \; \
      -exec $sed -i \
            -e "s,/cef[1-9][0-9]*,/${cefbranch},g" \
            -e "s/-cef[1-9][0-9]*/-${cefbranch}/g" \
            -e "s,^cefbranch=[1-9][0-9]*,cefbranch=$barecefbranch," \
            -e "s,^cefbranch=cef[1-9][0-9]*,cefbranch=$cefbranch," \
            \{} \; \
      2>/dev/null || true

    # Only want to change 1st line of changelog
    $sed -i \
        -e "1s/-cef[1-9][0-9]*/-${cefbranch}/g" \
        debian/changelog \
        #
fi

#------------------------------------------------------

# Set g-speak version number, and major version number for this project, in debian/* files.
# This sed should catch all Oblong projects.
# New projects must use the gsX.Yx convention in their package names to make this easy
# Legacy packages are listed here explicitly, e.g. one for each Package: line in yovo/debian/control.in
# g-speak version number parsing:
# (-as|-gh|-ts)* means 'match zero or one occurrances of the strings -gh, -as, or -ts'
# [1-9]\.[1-9][0-9]* means 'match version numbers with a nonzero digit, a period, a nonzero digit, and maybe more digits'
# yobuild and cef version number parsing:
# [1-9][0-9]* means 'match version numbers which are whole numbers greater than zero'
#
# About ${SKIP-SUBSTITUTION}:
# We want to be able to substitute g-speak versions
# across many places but we also want to leave it alone
# in some very specific places. So we use the string
# SKIP-SUBSTITUTION to tell sed skip such lines.
# We wrap it in ${} so that debian tools ignore it.
# Example:
# Breaks: liboblong-sidereal-dev,
#         liboblong-sidereal-gs3.27x0-dev, ${SKIP-SUBSTITUTION},
# forces ob-set-defaults to not change the g-speak reference on that line.

# Tell shellcheck to not complain about possible spaces in output of $(ls debian...)
# shellcheck disable=2046

sanitycheck
$sed -i \
    -e "/SKIP-SUBSTITUTION/! s/${projname}-gs(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*x[0-9]*/${projname}-gs$suffix${gspeak_version}x$version_major/g" \
    -e "/SKIP-SUBSTITUTION/! s/gs(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*x/gs$suffix${gspeak_version}x/g" \
    -e "/SKIP-SUBSTITUTION/! s/-gs[1-9]\.[0-9][0-9]*/-gs${gspeak_version}/g" \
    -e "/SKIP-SUBSTITUTION/! s/oblong-gs[1-9]\.[0-9][0-9]*(-as|-gh|-ts)*-/oblong-gs${gspeak_version}${suffix}-/g" \
    -e "s,([^/])g-speak(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*,\\1g-speak$suffix$gspeak_version,g" \
    -e "s/g-speak-core(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/g-speak-core$suffix$gspeak_version/g" \
    -e "s/g-speak-deps(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/g-speak-deps$suffix$gspeak_version/g" \
    -e "s/g-speak-gst-plugins(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/g-speak-gst-plugins$suffix$gspeak_version/g" \
    -e "s/oblong-afferent(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-afferent$suffix$gspeak_version/g" \
    -e "s/oblong-basement(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-basement$suffix$gspeak_version/g" \
    -e "s/oblong-impetus(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-impetus$suffix$gspeak_version/g" \
    -e "s/oblong-loam(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-loam$suffix$gspeak_version/g" \
    -e "s/oblong-loam\+\+(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-loam++$suffix$gspeak_version/g" \
    -e "s/oblong-media(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-media$suffix$gspeak_version/g" \
    -e "s/oblong-noodoo(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-noodoo$suffix$gspeak_version/g" \
    -e "s/oblong-plasma(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-plasma$suffix$gspeak_version/g" \
    -e "s/oblong-plasma\+\+(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-plasma++$suffix$gspeak_version/g" \
    -e "s/oblong-plasma-gstreamer(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-plasma-gstreamer$suffix$gspeak_version/g" \
    -e "s/oblong-plasma-ruby(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-plasma-ruby$suffix$gspeak_version/g" \
    -e "s/oblong-plasma-server(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-plasma-server$suffix$gspeak_version/g" \
    -e "s/oblong-plasma-zeroconf(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-plasma-zeroconf$suffix$gspeak_version/g" \
    -e "s/oblong-plasma-zeroconf-server(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-plasma-zeroconf-server$suffix$gspeak_version/g" \
    -e "s/oblong-projects-cthulhu(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-projects-cthulhu$suffix$gspeak_version/g" \
    -e "s/oblong-projects-event-slurper(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-projects-event-slurper$suffix$gspeak_version/g" \
    -e "s/oblong-projects-ganglia(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-projects-ganglia$suffix$gspeak_version/g" \
    -e "s/oblong-projects-inogeni(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-projects-inogeni$suffix$gspeak_version/g" \
    -e "s/oblong-projects-netfetch(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-projects-netfetch$suffix$gspeak_version/g" \
    -e "s/oblong-projects-ouija(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-projects-ouija$suffix$gspeak_version/g" \
    -e "s/oblong-projects-protist(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-projects-protist$suffix$gspeak_version/g" \
    -e "s/oblong-projects-quartermaster(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-projects-quartermaster$suffix$gspeak_version/g" \
    -e "s/oblong-projects-tile-daemon(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-projects-tile-daemon$suffix$gspeak_version/g" \
    -e "s/oblong-projects-ventriloquy(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-projects-ventriloquy$suffix$gspeak_version/g" \
    -e "s/oblong-projects-video(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-projects-video$suffix$gspeak_version/g" \
    -e "s/oblong-rtsp-viddle-server[1-9]\.[0-9][0-9]*/oblong-rtsp-viddle-server$suffix$gspeak_version/g" \
    -e "s/oblong-samples(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-samples$suffix$gspeak_version/g" \
    -e "s/oblong-staging(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-staging$suffix$gspeak_version/g" \
    -e "s/oblong-twillig(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-twillig$suffix$gspeak_version/g" \
    -e "s/oblong-system-protist(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-system-protist$suffix$gspeak_version/g" \
    -e "s/-mz[1-9][0-9]*/-mz${mezz_version}/g" \
    -e "s!^EXTRA_CMAKE_OPTIONS=.*!EXTRA_CMAKE_OPTIONS=$extra_cmake_options!" \
    -e "s,^CMAKE_GENERATOR=.*,CMAKE_GENERATOR=$opt_generator," \
    debian/rules \
    debian/control \
    $(ls \
      debian/.gitignore \
      debian/*.alternatives \
      debian/*.lintian-overrides \
      debian/*.postinst \
      debian/*.postrm \
      debian/*.preinst \
      debian/*.prerm \
      debian/*.service \
      debian/*.upstart \
      2>/dev/null) \
    #

sanitycheck

# Same as above, but only patterns needed for 1st line of changelog
# plus one to fix up some brain damage
$sed -i \
    -e "1s/${projname}-gs(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*x[0-9]*/${projname}-gs$suffix${gspeak_version}x$version_major/g" \
    -e "1s/gs(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*x/gs$suffix${gspeak_version}x/g" \
    -e "1s/oblong-gs[1-9]\.[0-9][0-9]*(-as|-gh|-ts)*-/oblong-gs${gspeak_version}${suffix}-/g" \
    -e "1s/g-speak(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/g-speak$suffix$gspeak_version/g" \
    -e "1s/oblong-rtsp-viddle-server[1-9]\.[0-9][0-9]*/oblong-rtsp-viddle-server$suffix$gspeak_version/g" \
    -e "1s/oblong-staging(-as|-gh|-ts)*[1-9]\.[0-9][0-9]*/oblong-staging$suffix$gspeak_version/g" \
    -e "1s/-mz[1-9][0-9]*/-mz${mezz_version}/g" \
    -e "1s/oblong-gs-gh${gspeak_version}-gh-/oblong-gs${gspeak_version}-gh-/" \
    debian/changelog \
    #

# Update the version numbers in all instances of the above filenames in the debian directory
moved=false
for from in \
    debian/*.alternatives \
    debian/*.install \
    debian/*.lintian-overrides \
    debian/*.postinst \
    debian/*.postrm \
    debian/*.preinst \
    debian/*.prerm \
    debian/*.service \
    debian/*.upstart \
    #
do
    if test -f "$from"
    then
        # Traditional g-speak package names (like oblong-staging or oblong-loam) need special handling.
        # These packages can be recognized as follows:
        # - they contain the words oblong or g-speak
        # - they do not contain two embedded version numbers
        # - they do not contain the patterns -gs[1-9] or -gs-gh[0-9]
        # - they do not contain the patterns mezzanine, ob-http-ctl, oblong-mip, oblong-mzreach,
        #   oblong-whiteboard, or oblong-ir-inertial-admin-applications
        if echo "$from" | grep -qE -e 'oblong|g-speak' &&
           ! echo "$from" | grep -qE -e '[0-9].*[-a-z].*[0-9]' &&
           ! echo "$from" | grep -qE -e '-gs(-as|-gh|-ts)*[0-9]' &&
           ! echo "$from" | grep -qE -e 'mezzanine|ob-http-ctl|oblong-mip|oblong-mzreach|oblong-whiteboard|oblong-ir-inertial-admin-applications' \
           #
        then
           # It's a traditional g-speak package name.  The only number
           # in it is the g-speak version number, and it is at the end.
           traditional_gspeak_pkg=$(basename "$from" | $sed -e 's/[0-9].*//' -e 's/(-as|-gh|-ts)*//g')
        else
           traditional_gspeak_pkg=xyzzy-no-match
        fi
        etraditional_gspeak_pkg=$(echo $traditional_gspeak_pkg | sed 's/+/\\+/g')

        # Traditional mezzanine package names need special handling, but only if we're changing the mezzanine version.
        # These packages can be recognized as follows:
        # - they contain the patterns mezzanine, ob-http-ctl, oblong-mip, oblong-mzreach,
        #   oblong-whiteboard, or oblong-ir-inertial-admin-applications
        # - they do not contain two embedded version numbers
        # - they do not contain the patterns -gs[1-9] or -gs-gh[0-9]
        # - they do not contain the word g-speak
        # New-fangled mezzanine packages don't need special processing, just change X.Y in oblong-mezzanineX.Y
        if test "$mezz_version" != "" &&
           echo "$from" | grep -qE -e 'mezzanine|ob-http-ctl|oblong-mip|oblong-mzreach|oblong-whiteboard|oblong-ir-inertial-admin-applications' &&
           ! echo "$from" | grep -qE -e '[0-9].*[-a-z].*[0-9]' &&
           ! echo "$from" | grep -qE -e '-gs(-as|-gh|-ts)*[0-9]' &&
           ! echo "$from" | grep -qE -e 'g-speak' \
           #
        then
           # It's a traditional mezzanine package name.  The only number
           # in it is the mezzanine version number, and it is at the end.
           traditional_mezz_pkg=$(basename "$from" | sed -e 's/[0-9].*//')
        elif test "$mezz_version" != "" &&
           echo "$from" | grep -qE -e 'oblong-mezzanine[0-9.]*-.*-gs[0-9]'
        then
           # It's a new-fangled mezz package, this case is easy
           traditional_mezz_pkg=oblong-mezzanine
        else
           traditional_mezz_pkg=xyzzy-no-match
        fi

        to="$(echo "$from" | $sed \
           -e "s/-gs(-as|-gh|-ts)*[1-9]\\.[0-9][0-9]*x[0-9]*/-gs${suffix}${gspeak_version}x${version_major}/" \
           -e "s/-gs(-as|-gh|-ts)*[1-9]\\.[0-9][0-9]*([^x0-9])/-gs${suffix}${gspeak_version}\\2/" \
           -e "s/oblong-gs${suffix}[1-9]\.[0-9][0-9]*(-as|-gh|-ts)*-/oblong-gs${gspeak_version}${suffix}-/g" \
           -e "s/oblong-gs[1-9]\.[0-9][0-9]*(-as|-gh|-ts)*-/oblong-gs${gspeak_version}${suffix}-/g" \
           -e "s/$etraditional_gspeak_pkg(-as|-gh|-ts)*[1-9]\\.[0-9][0-9]*/${traditional_gspeak_pkg}${suffix}${gspeak_version}/" \
           -e "s/$traditional_mezz_pkg[1-9]\\.[0-9][0-9]*/${traditional_mezz_pkg}${mezz_version}/" \
          #
        )"
        if test "$cefbranch" != ""
        then
            to="$(echo "$to" | $sed \
               -e "s/-cef[1-9][0-9]*/-${cefbranch}/" \
               #
            )"
        fi
        if test "$YOVERSION" != ""
        then
            to="$(echo "$to" | $sed \
               -e "s/yobuild[0-9]*/yobuild$YOVERSION/" \
               #
            )"
        fi
        if test "$from" != "$to"
        then
            # Leave GITCMD empty when just building, set it to git when renaming in anger
            $GITCMD mv "$from" "$to"
            moved=true
            movedcmd="mv $from $to"
        fi
    fi
done

# FIXME: can this be simplified as the file renames were?

sanitycheck
# Don't do (most) mezzanine version processing unless explicitly called for
if test "$mezz_version" != ""
then
  # This should be a complete list of all packages (minus -dbg) on the mezzanine train,
  # in alphabetical order.
  # This is fragile, and needs to be updated every time we add a package.
  # To remove the fragility and hardcoding, and get rid of the list, there
  # are two options:
  # 1) change code to use oblong-mezzanine*2.7 instead.  Hard to get right.
  # 2) move the mezz version number to immediately after oblong-mezzanine,
  #    so packages are named e.g. oblong-mezzanine2.7-mip
  #    This would make life SO MUCH EASIER I would CRY TEARS OF JOY
  # 2 is probably the right option.  To make the transition easy, we could
  # make this script automatically switch conventions above a certain
  # mezzanine version number.  One-way conversion from old to new is
  # probably sufficient.  Of course, project buy-in would be vital.
  packages="
    mezzanine2.7
    ob-http-ctl2.7
    oblong-ir-inertial-admin-applications2.7
    oblong-mezzanine2.7
    oblong-mezzanine-admin-web2.7
    oblong-mezzanine-appliance2.7
    oblong-mezzanine-application2.7
    oblong-mezzanine-deps2.7
    oblong-mezzanine-extras2.7
    oblong-mezzanine-full2.7
    oblong-mezzanine-full-amd2.7
    oblong-mezzanine-init2.7
    oblong-mezzanine-kipple2.7
    oblong-mezzanine-lightbox2.7
    oblong-mezzanine-ob-http-ctl2.7
    oblong-mezzanine-plymouth2.7
    oblong-mezzanine-screencast-payload-mac2.7
    oblong-mezzanine-screencast-payload-win2.7
    oblong-mezzanine-screencast-provisioner2.7
    oblong-mezzanine-screenshare-provisioner2.7
    oblong-mezzanine-updater2.7
    oblong-mezzanine-user-docs-videos2.7
    oblong-mezzanine-user-docs-www2.7
    oblong-mezzanine-web2.7
    oblong-mip2.7
    oblong-mzreach-www2.7
    oblong-whiteboard2.7
  "

  # Assume we don't need to handle -dbg packages separately
  for package in $packages
  do
      # Update the version number in all instances of the above packages
      # in file bodies in the debian directory
      from=$(echo "$package" | $sed 's/2.7/[1-9].[0-9][0-9]*/')
      to=$(echo "$package" | $sed "s/2.7/$mezz_version/")
      $sed -i \
          -e "s/$from/$to/g" \
          debian/control debian/rules debian/changelog \
          $(ls debian/*.lintian-overrides debian/*.postinst debian/*.prerm debian/*.upstart debian/*.service debian/.gitignore 2>/dev/null) \
          #
  done
fi

if $moved && test "$GITCMD" = ""
then
    bs_warn "ob-set-defaults: Files renamed (e.g. $movedcmd), but --hard not given, so 'git mv' not used."
    bs_warn "ob-set-defaults: Undo, then rerun with --hard if you want to check changes in to git."
fi
sanitycheck
