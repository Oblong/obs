#!/bin/sh
# Sets persistant source options in debian directory.
#
# Run to select a different version of g-speak or change cmake options.
# NOTE: use --hard if you want to change default g-speak version in git!
#
# Generic, should work for most projects that depend on g-speak.
# However, if your project needs different behavior, you have two choices:
# 1) Override this script entirely by creating the file set-gspeak.sh
# at the top of your project and putting your private version there.
# 2) Tweak defaults by defining the file ci/ob-set-defaults.conf
# containing lines like
#    PREFIX=/opt/oblong/my-funky-dir
# (see Tweakable Defaults below)

usage() {
    cat <<_EOF_
Usage: ob-set-defaults [options]
Sets default generic build parameters for this project.
Sticky options:
  --cef branch   - which version of cef to build against (sticky)
  --g-speak VER  - which version of g-speak to build against (sticky)
  --mezz VER     - which version of mezzanine to build against (sticky)
Options:
  -v             - verbose
  --hard         - use 'git mv' instead of 'mv' when renaming debian files
  --asan         - alias for -DASAN=on
  --coverage     - alias for -DCOVERAGE=on
  --debug        - alias for -DCMAKE_BUILD_TYPE=Debug
  --greenhouse   - alias for -DUSE_STATIC_G_SPEAK=on -DG_SPEAK_HOME=/opt/oblong/greenhouse, hobbles plasma, adds -gh package suffixes
  --make         - generate Makefiles and build with make
  --ninja        - generate build.ninja and build with ninja
  --no-tests     - alias for -DBUILD_TESTS=off
  --prefix DIR   - where to install
  --rel          - alias for -DCMAKE_BUILD_TYPE=Release
  --reldeb       - alias for -DCMAKE_BUILD_TYPE=ReleaseWithDebInfo
  --tsan         - alias for -DTSAN=on
  --xcode        - generate XCode project and build with XCode
  --no-major     - don't append major version number to package name
  --major N      - append given major version number to package name
  -Dfoo=bar      - passed through to cmake with doublequotes

--cef, --g-speak, and --mezz are 'sticky', and keep their value on next run
even if you don't specify them again.

If this command renames files in the debian directory, it will
tell you, and remind you about the --hard option (which can save
you trouble when committing).
_EOF_
}

# Project defined a set-mezzanine.sh, so call that instead.
fallback_to_classic_mezzanine() {
    echo "Found local set-mezzanine.sh, running that instead"

    # Adjust args to match old interface
    local verbose
    local mezz_version
    while true
    do
       case "$1" in
       -v)         verbose=-x;;
       --mezz)  shift; mezz_version=$1;;
       --hard)
           # makes --g-speak more emphatic and check-in-able
           # Let caller specify it via 'GITCMD=git' for backward compatibility
           export GITCMD=git
           ;;
       *) break;;
       esac
       shift
    done
    exec sh $verbose set-mezzanine.sh "$mezz_version" "$@"
}

# Project defined a set-gspeak.sh, so call that instead.
# Restriction: -v and/or --g-speak must come first.
fallback_to_classic() {
    echo "Found local set-gspeak.sh, running that instead"

    # Adjust args to match old interface
    local verbose
    local gspeak_version
    while true
    do
       case "$1" in
       -v)         verbose=-x;;
       --g-speak)  shift; gspeak_version=$1;;
       --hard)
           # makes --g-speak more emphatic and check-in-able
           # Let caller specify it via 'GITCMD=git' for backward compatibility
           export GITCMD=git
           ;;
       *) break;;
       esac
       shift
    done
    exec sh $verbose set-gspeak.sh "$gspeak_version" "$@"
}

# Let project override by defining set-gspeak.sh (as in days of yore)
case "$*" in
*--g-speak*)
  if test -f set-gspeak.sh
  then
    fallback_to_classic "$@"
  fi
  ;;
*--mezz*)
  if test -f set-mezzanine.sh
  then
    fallback_to_classic_mezzanine "$@"
  fi
  ;;
esac

# Give help before doing anything that might fail
case "$1" in
""|-h|--help|help) usage; exit 0;;
esac

# This is part of oblong's obs package
# See https://github.com/Oblong/obs
. obs_funcs.sh

set -e

case "$(uname -s)" in
Darwin) sed=gsed; if ! gsed --version; then bs_abort "please install gnu-sed"; fi;;
*) sed=sed;;
esac

# Tweakable Defaults
# The defaults that can be overridden by ob-set-defaults.conf
gspeak_version=""
mezz_version=""
G_SPEAK_HOME=""
PREFIX=""
cefbranch=""
extra_cmake_options=""
opt_generator="Ninja"
opt_no_major=false
suffix=""

# Load project-specific defaults, if any
if test -f ci/ob-set-defaults.conf
then
    echo "Loading ci/ob-set-defaults.conf"
    . ci/ob-set-defaults.conf
fi

while test "$1" != ""
do
    case "$1" in
    -v) set -x
        ;;
    --greenhouse)   # should be sticky, but is seldom used
        # In project greenhouse, also need to specify --prefix /opt/oblong/greenhouse to match old set-gspeak.sh behavior
        suffix="-gh"
        # everybody's set-gspeak took --greenhouse to mean G_SPEAK_HOME=/opt/oblong/greenhouse PREFIX=/opt/oblong/greenhouse
        G_SPEAK_HOME=/opt/oblong/greenhouse
        # yovo and staging's cmake needed -DGREENHOUSE=on; everyone else's cmake needs -DUSE_STATIC_G_SPEAK=on
        extra_cmake_options="$extra_cmake_options -DUSE_STATIC_G_SPEAK=on -DGREENHOUSE=on"
        ;;
    --g-speak)
        shift
        gspeak_version=$1
        ;;
    --mezz)
        shift
        mezz_version=$1
        ;;
    --hard)
        # makes --g-speak more emphatic and check-in-able
        # Let caller specify it via 'GITCMD=git' for backward compatibility
        GITCMD=git
        ;;
    -D*!*)
        echo "Sorry, exclamation marks and embedded single quotes are not supported here in cmake options"
        exit 1
        ;;
    -D*)
        extra_cmake_options="$extra_cmake_options '$1'"
        ;;
    --asan)
        extra_cmake_options="$extra_cmake_options -DASAN=on"
        ;;
    --cef)
        shift
        cefbranch=cef$1
        ;;
    --coverage)
        extra_cmake_options="$extra_cmake_options -DCOVERAGE=on"
        ;;
    --debug)
        extra_cmake_options="$extra_cmake_options -DCMAKE_BUILD_TYPE=Debug"
        ;;
    --rel)
        extra_cmake_options="$extra_cmake_options -DCMAKE_BUILD_TYPE=Release"
        ;;
    --reldeb)
        extra_cmake_options="$extra_cmake_options -DCMAKE_BUILD_TYPE=ReleaseWithDebInfo"
        ;;
    --major)
        shift
        opt_major="$1"
        ;;
    --make)
        opt_generator="Unix Makefiles"
        ;;
    --ninja)
        opt_generator="Ninja"
        ;;
    --no-major)
        opt_no_major=true
        ;;
    --prefix)
        shift
        PREFIX="$1"
        ;;
    --vs)
        opt_toolchain=$(bs_detect_toolchain)
        case $opt_toolchain in
        msvc2010) opt_generator="Visual Studio 10 2010";;
        msvc2013) opt_generator="Visual Studio 12 2013";;
        msvc2015) opt_generator="Visual Studio 14 2015";;
        *) bs_abort "ob-set-defaults: unknown compiler $opt_toolchain";;
        esac
        ;;
    --xcode)
        opt_generator="Xcode"
        ;;
    --no-tests)
        extra_cmake_options="$extra_cmake_options -DBUILD_TESTS=off"
        ;;
    *)
        usage
        exit 1
        ;;
    esac
    shift
done

# The version-changing options are sensitive to debris left
# behind in the debian directory by builds, so abort early
# if that's likely to be a problem.
if test "$mezz_version" != "" || test "$gspeak_version" != ""
then
    if ls debian/*.bak 2>/dev/null || ls debian/*.debhelper 2>/dev/null
    then
        bs_abort "Please remove debris (e.g. .bak, .debhelper) from debian directory, e.g. with 'bau clean', 'git clean -f', and/or 'dh clean'"
    fi
fi

BITS=$(getconf LONG_BIT)
if test "$gspeak_version" = ""
then
    # Keep old version, if any, as this is a sticky option
    gspeak_version=$(bs_get_gspeak_version)
fi
YOVERSION=$(bs_yovo2yoversion "$gspeak_version")
YOBUILD=/opt/oblong/deps-$BITS-$YOVERSION
if test "$YOVERSION" = ""
then
    bs_abort "ob-set-defaults: YOVERSION is empty?"
fi
if test "$G_SPEAK_HOME" = ""
then
    G_SPEAK_HOME=/opt/oblong/g-speak$gspeak_version
fi
if test "$PREFIX" = ""
then
    PREFIX=$G_SPEAK_HOME
fi
if test "$cefbranch" = ""
then
    # Keep old version, if any, as this is a sticky option
    if ! cefbranch=$(bs_get_cef_version) || test "$cefbranch" = ""
    then
        cefbranch=$(bs_yovo2cefversion "$gspeak_version" || true)
    fi
fi

pkgname=$(awk '/Source:/ {print $2};' < debian/control)
projname=$(echo "$pkgname" | $sed 's/-gs.*//;s/-gh//;')

if test "$opt_major" != ""
then
    version_major="$opt_major"
elif $opt_no_major
then
    version_major=""
else
    # Allow multiple major versions of this package to coexist in repo by using major version number as suffix on package name
    version_major=$(bs_get_major_version_git)
fi

# Set g-speak version number, and major version number for this project, in debian/* files.
# This sed should catch all Oblong projects.
# New projects must use the gsX.Yx convention in their package names to make this easy
# Legacy packages are listed here explicitly, e.g. one for each Package: line in yovo/debian/control.in
# g-speak version number parsing:
# \(-gh\)\{0,1\} means 'match zero or one occurrances of the string -gh'
# [1-9]\.[1-9][0-9]* means 'match version numbers with a nonzero digit, a period, a nonzero digit, and maybe more digits'
# yobuild and cef version number parsing:
# [1-9][0-9]* means 'match version numbers which are whole numbers greater than zero'
#
# About STOP-SUBSTITUTION:
# The oblong-mezzanine-updaterX.Y package includes a long list of Breaks/Replaces
# so that it will uninstall the old mezzanine before a new one is installed.
# set-gspeak.sh and set-mezzanine.sh should not replace those version numbers.
# There is a special line in mezzanine/debian/control with the string
# STOP-SUBSTITUTION which tells sed below to stop there.
#
# About ${SKIP-SUBSTITUTION}:
# We want to be able to substitute g-speak versions
# across many places but we also want to leave it alone
# in some very specific places. So we use the string
# SKIP-SUBSTITUTION to tell sed skip such lines.
# We wrap it in ${} so that debian tools ignore it.
# Example:
# Breaks: liboblong-sidereal-dev,
#         liboblong-sidereal-gs3.27x0-dev, ${SKIP-SUBSTITUTION},
# forces ob-set-defaults to not change the g-speak reference on that line.
#
# Handling both STOP-SUBSTITUTION and SKIP-SUBSTITUTION with sed
# requires the {} feature of gnu sed, whee!

# Tell shellcheck to not complain about possible spaces in output of $(ls debian...)
# shellcheck disable=2046

$sed -i \
    -e "1,/STOP-SUBSTITUTION/ {/SKIP-SUBSTITUTION/! s/${projname}-gs\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*x[0-9]*/${projname}-gs$suffix${gspeak_version}x$version_major/g}" \
    -e "1,/STOP-SUBSTITUTION/ {/SKIP-SUBSTITUTION/! s/gs\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*x/gs$suffix${gspeak_version}x/g}" \
    -e "1,/STOP-SUBSTITUTION/ s/g-speak\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/g-speak$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/g-speak-core\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/g-speak-core$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/g-speak-deps\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/g-speak-deps$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/g-speak-gst-plugins\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/g-speak-gst-plugins$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-afferent\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-afferent$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-basement\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-basement$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-impetus\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-impetus$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-loam\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-loam$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-loam++\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-loam++$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-media\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-media$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-noodoo\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-noodoo$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-plasma\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-plasma$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-plasma++\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-plasma++$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-plasma-gstreamer\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-plasma-gstreamer$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-plasma-ruby\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-plasma-ruby$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-plasma-server\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-plasma-server$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-plasma-zeroconf\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-plasma-zeroconf$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-plasma-zeroconf-server\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-plasma-zeroconf-server$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-projects-cthulhu\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-projects-cthulhu$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-projects-event-slurper\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-projects-event-slurper$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-projects-ganglia\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-projects-ganglia$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-projects-inogeni\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-projects-inogeni$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-projects-netfetch\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-projects-netfetch$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-projects-ouija\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-projects-ouija$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-projects-protist\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-projects-protist$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-projects-quartermaster\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-projects-quartermaster$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-projects-tile-daemon\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-projects-tile-daemon$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-projects-ventriloquy\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-projects-ventriloquy$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-projects-video\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-projects-video$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-rtsp-viddle-server[1-9]\.[0-9][0-9]*/oblong-rtsp-viddle-server$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-staging\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-staging$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-system-protist\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-system-protist$suffix$gspeak_version/g" \
    -e "1,/STOP-SUBSTITUTION/ s/oblong-yobuild[0-9]*/oblong-yobuild$YOVERSION/" \
    -e "1,/STOP-SUBSTITUTION/ s/deps-[0-9]*-[0-9]*/deps-$BITS-$YOVERSION/" \
    -e "1,/STOP-SUBSTITUTION/ s/-cef[1-9][0-9]*/-${cefbranch}/g" \
    -e "1,/STOP-SUBSTITUTION/ s/-mz[1-9][0-9]*/-mz${mezz_version}/g" \
    -e "1,/STOP-SUBSTITUTION/ s,^YOBUILD=.*,YOBUILD=$YOBUILD," \
    -e "1,/STOP-SUBSTITUTION/ s,^G_SPEAK_HOME *=.*,G_SPEAK_HOME=$G_SPEAK_HOME," \
    -e "1,/STOP-SUBSTITUTION/ s,^PREFIX=.*,PREFIX=$PREFIX," \
    -e "1,/STOP-SUBSTITUTION/ s!^EXTRA_CMAKE_OPTIONS=.*!EXTRA_CMAKE_OPTIONS=$extra_cmake_options!" \
    -e "1,/STOP-SUBSTITUTION/ s,^CMAKE_GENERATOR=.*,CMAKE_GENERATOR=$opt_generator," \
    debian/rules \
    debian/control \
    $(ls debian/*.install debian/*.lintian-overrides debian/*.postinst debian/*.prerm debian/*.upstart debian/*.service debian/.gitignore 2>/dev/null) \
    #

# Only want to change 1st line of changelog
$sed -i \
    -e "1s/${projname}-gs\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*x[0-9]*/${projname}-gs$suffix${gspeak_version}x$version_major/g" \
    -e "1s/-cef[1-9][0-9]*/-${cefbranch}/g" \
    -e "1s/oblong-yobuild[0-9]*/oblong-yobuild$YOVERSION/" \
    -e "1s/oblong-staging\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/oblong-staging$suffix$gspeak_version/g" \
    -e "1s/g-speak\(-gh\)\{0,1\}[1-9]\.[0-9][0-9]*/g-speak$suffix${gspeak_version}/g" \
    debian/changelog \
    #

# Update the version number in all instances of the above filenames in the debian directory
# (to the tune of http://www.nytimes.com/2010/10/04/arts/television/04lesser.html )
moved=false
for from in \
    debian/*oblong-yobuild[1-9]*.install \
    debian/*oblong-yobuild[1-9]*.postinst \
    debian/*oblong-yobuild[1-9]*.prerm \
    debian/*oblong-*-gs*[1-9].[0-9]*.install \
    debian/*oblong-*-gs*[1-9].[0-9]*.lintian-overrides \
    debian/*oblong-*-gs*[1-9].[0-9]*.postinst \
    debian/*oblong-*-gs*[1-9].[0-9]*.prerm \
    debian/*oblong-*-gs*[1-9].[0-9]*.upstart \
    debian/*oblong-*-gs*[1-9].[0-9]*.service \
    debian/*oblong-staging[1-9].[0-9]*.install \
    debian/*oblong-staging-gh*[1-9].[0-9]*.install \
    #
do
    if test -f "$from"
    then
        to="$(echo "$from" | $sed "s/-gs\(-gh\)\{0,1\}[1-9]\\.[0-9][0-9]*x[0-9]*/-gs$suffix${gspeak_version}x${version_major}/;s/oblong-staging\(-gh\)\{0,1\}[1-9]\\.[0-9][0-9]*/oblong-staging$suffix$gspeak_version/;s/-cef[1-9][0-9]*/-${cefbranch}/;s/yobuild[0-9]*/yobuild$YOVERSION/")"
        if test "$from" != "$to"
        then
            # Leave GITCMD empty when just building, set it to git when renaming in anger
            $GITCMD mv "$from" "$to"
            moved=true
            movedcmd="mv $from $to"
        fi
    fi
done

# Don't do (most) mezzanine version processing unless explicitly called for
if test "$mezz_version" != ""
then
  # This should be a complete list of all packages (minus -dbg) on the mezzanine train,
  # in alphabetical order.
  # This is fragile, and needs to be updated every time we add a package.
  # To remove the fragility and hardcoding, and get rid of the list, there
  # are two options:
  # 1) change code to use oblong-mezzanine*2.7 instead.  Hard to get right.
  # 2) move the mezz version number to immediately after oblong-mezzanine,
  #    so packages are named e.g. oblong-mezzanine2.7-mip
  #    This would make life SO MUCH EASIER I would CRY TEARS OF JOY
  # 2 is probably the right option.  To make the transition easy, we could
  # make this script automatically switch conventions above a certain
  # mezzanine version number.  One-way conversion from old to new is
  # probably sufficient.  Of course, project buy-in would be vital.
  packages="
    mezzanine2.7
    ob-http-ctl2.7
    oblong-ir-inertial-admin-applications2.7
    oblong-mezzanine2.7
    oblong-mezzanine-admin-web2.7
    oblong-mezzanine-appliance2.7
    oblong-mezzanine-deps2.7
    oblong-mezzanine-extras2.7
    oblong-mezzanine-full2.7
    oblong-mezzanine-full-amd2.7
    oblong-mezzanine-init2.7
    oblong-mezzanine-kipple2.7
    oblong-mezzanine-lightbox2.7
    oblong-mezzanine-ob-http-ctl2.7
    oblong-mezzanine-plymouth2.7
    oblong-mezzanine-screencast-payload-mac2.7
    oblong-mezzanine-screencast-payload-win2.7
    oblong-mezzanine-screencast-provisioner2.7
    oblong-mezzanine-screenshare-provisioner2.7
    oblong-mezzanine-updater2.7
    oblong-mezzanine-user-docs-videos2.7
    oblong-mezzanine-user-docs-www2.7
    oblong-mezzanine-web2.7
    oblong-mip2.7
    oblong-mzreach-www2.7
    oblong-whiteboard2.7
  "

  # Full list of all suffixes of files in debian subdirectory that might need renaming
  debsuffices="install lintian-overrides preinst prerm postinst postrm lintian-overrides service upstart"

  # About STOP-SUBSTITUTION:
  # The oblong-mezzanine-updaterX.Y package includes a long list of Breaks/Replaces
  # so that it will uninstall the old mezzanine before a new one is installed.
  # set-gspeak.sh and set-mezzanine.sh should not replace those version numbers.
  # There is a special line in debian/control with the string STOP-SUBSTITUTION
  # which tells sed below to stop there.

  # Assume we don't need to handle -dbg packages separately, they 'never' have control files
  for package in $packages
  do
      # Update the version number in all instances of the above packages
      # in file bodies in the debian directory
      from=$(echo $package | $sed 's/2.7/[1-9].[0-9][0-9]*/')
      to=$(echo $package | $sed "s/2.7/$mezz_version/")
      $sed -i \
          -e "1,/STOP-SUBSTITUTION/ s/$from/$to/g" \
          debian/control debian/rules debian/changelog debian/.gitignore \
          $(ls debian/*.lintian-overrides debian/*.postinst debian/*.prerm debian/*.upstart debian/*.service debian/.gitignore 2>/dev/null) \
          #

      # Update the version number in all instances of the above filenames in the debian directory
      for debsuffix in $debsuffices
      do
       # Get possible service-specific filenames (only need to check if debsuffix is service or init or upstart, but overkill is fine)
       # This is hard because there's no way to list service names, we have to discover them
       files=""
       # First, construct RE matching the base package name:
       fromleft=$(echo "$package" | $sed 's/2.7/[1-9]\.[0-9]*/')
       # Then loop over service names found for that base package name and this debsuffix, appending full filename to list... but with 2.7 for mezz version
       for service in $(cd debian; ls | grep "^$fromleft\\..*\\.$debsuffix\$" 2> /dev/null | sed "s,^$fromleft\\.,,;s,\\.$debsuffix,," | sort -u)
       do
           files="$files $package.$service.$debsuffix"
       done
       # Plain old filename
       files="$files $package.$debsuffix"
       # files is now a complete set of probable (possibly service-specific) filenames for this package with 2.7 instead of mezzanine version number

       # Now loop over the files and rename them to match current mezzanine version number
       for file in $files
       do
        # file globs not sufficient, we need regexp to avoid matching garbage after version number
        from=$(echo "$file" | $sed 's/2.7/[1-9]\.[0-9][0-9]*/')
        if ! from=$(cd debian; ls | grep "^$from")
        then
            continue
        fi
        if test $(echo "$from" | wc -w) -ne 1
        then
            echo "Alas, there are more than one file matching debian/$from.  There can be only one.  Try git clean?"
            exit 1
        fi
        to=$(echo "$file" | $sed "s/2.7/$mezz_version/")
        if test debian/$from != debian/$to && test -f debian/$from
        then
            $GITCMD mv debian/$from debian/$to
            moved=true
            movedcmd="mv $from $to"
        fi
       done
      done
  done

  # FIXME: we should stop modifying files outside of debian here
  for file in \
    debian/rules \
    projects/mezzanine/MezzanineVersion.h \
    #
  do
    if test -f $file
    then
      $sed -i \
        -e 's/MEZZANINE_VERSION *= *"[1-9].[0-9]*"/MEZZANINE_VERSION = "'$mezz_version'"/' \
        $file
    fi
  done
fi

if $moved && test "$GITCMD" = ""
then
    bs_warn "ob-set-defaults: Files renamed (e.g. $movedcmd), but --hard not given, so 'git mv' not used."
    bs_warn "ob-set-defaults: Undo, then rerun with --hard if you want to check changes in to git."
fi
