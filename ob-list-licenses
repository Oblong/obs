#!/bin/sh
# Script to output licenses used by runtime dependencies of a linux binary
# Not yet well-defined; output format subject to change.
#
# Example:
# $ ./ob-list-licenses /usr/bin/zip
# libbz2-1.0  
#   "GPL-2.0-or-later"
#   "GPL-1.0-or-later"
#   "bzip2-1.0.6"
# libc6  
#   "glibc-special"

long=false
spdx=false
while test "$1" != ""
do
  case "$1" in
  --long) long=true; shift;;
  --spdx) spdx=true; shift;;
  *) break;;
  esac
done

progname=`basename "$0"`
binary="$1"

case "$binary" in
""|-h|--help)
  echo "Usage: ob-list-licenses [options] /usr/bin/foobar"
  echo "Given path to a dynamically linked binary, output dependencies it needs at runtime, along with their licenses."
  echo "Options:"
  echo "--long: longer output format, for debugging"
  echo "--spdx: convert dep-5 license name to spdx id"
  exit 0
esac

if ! scancode --version > /dev/null
then
    echo "Please install scancode with 'pip install scancode-toolkit'"
    case "$PATH" in
    */.local/bin*) ;;
    *) echo 'and possibly add $HOME/.local/bin to PATH';;
    esac
    exit 1
fi
if ! jq --version > /dev/null
then
    echo "Please install jq with 'sudo apt install jq'"
    exit 1
fi

find_packages_ldd() {
    # ldd: List dynamic dependencies
    #   sed: extract path to shared library
    #   dpkg-query: find containing package
    #   sed: extract name of package
    ldd "$1" |
      sed 's/ (.*//;s/.* //' |
      sort -u |
      xargs dpkg-query -S 2> /dev/null |
      sed 's/:.*//' |
      sort -u
}

# Take a path to a dep-5 copyright file
# Outputs SPDX ids for all the licenses in that file
# Format: one per line, quoted, with indentation.
copyright2spdx()
{
    if egrep -q -i "^Format.*dep5|^Format.*copyright-format/1.0" < $1
    then
        # Definitely DEP-5 format.
        # License: field isn't really an spdx id, but it's close...
        grep < $1 'License:' |
          sed 's/License: /  /' |
          sort -u
    else
        # Not really dep-5 format! 
        local filter
        case $long in
        true)
          # Let it all hang out
          filter="{info: .files[].licenses[]}"
          scancode --quiet --json-pp - --license $1 | 
            jq --compact-output "$filter" |
            sort -u
          ;;
        false)
          # Show just SPDX id
          filter="{spdx: .files[].licenses[].spdx_license_key}"
          scancode --quiet --json-pp - --license $1 | 
            jq --compact-output "$filter" |
            sed 's/.*:"/  /;s/"}//' |
            sort -u
          ;;
        esac
    fi
}

# Like copyright2spdx, but takes a package name, and handles special cases
pkg2spdx()
{
    # If not long format, show shorter output for special cases not handled by scancode yet
    case $long-$pkg in 
    false-libc6)      echo '  glibc-special';;
    false-libgcc1)    echo '  libgcc1-special';;
    false-libstdc++6) echo '  libstdc++6-special';;
    *)
        if f=$(dpkg-query -L $pkg | grep copyright)
        then
            copyright2spdx $f
        fi
        ;;
    esac
}

# Output the licenses used by each package the binary uses
for pkg in $(find_packages_ldd "$binary")
do
    echo -n "$pkg  "
    dpkg-query -W -f='${Homepage}\n' $pkg | sort -u | tr '\012' ',' | sed 's/,$//'
    echo ""
    pkg2spdx $pkg
    echo ""
done
