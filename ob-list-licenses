#!/bin/sh
# Script to output licenses used by runtime dependencies of a linux binary
# Not yet well-defined; output format subject to change.
#
# Example:
# $ ./ob-list-licenses /usr/bin/zip
# libbz2-1.0  
#   "GPL-2.0-or-later"
#   "GPL-1.0-or-later"
#   "bzip2-1.0.6"
# libc6  
#   "glibc-special"

set -e

progname=`basename "$0"`
binary="$1"

case "$binary" in
""|-h|--help)
  echo "Usage: ob-list-licenses [options] /usr/bin/foobar"
  echo "Given path to a dynamically linked binary, output dependencies it needs at runtime, along with their licenses."
  echo "Options:"
  echo "--help: print this message"
  exit 0
esac

find_packages_ldd() {
    # ldd: List dynamic dependencies
    #   sed: extract path to shared library
    #   dpkg-query: find containing package
    #   sed: extract name of package
    ldd "$1" |
      sed 's/ (.*//;s/.* //' |
      sort -u |
      xargs dpkg-query -S 2> /dev/null |
      sed 's/:.*//' |
      sort -u
}

# Output the licenses used by each package the binary uses
for pkg in $(find_packages_ldd "$binary")
do
    echo -n "$pkg  "
    dpkg-query -W -f='${Homepage}\n' $pkg | sort -u | tr '\012' ',' | sed 's/,$//'
    echo ""
    f=$(dpkg-query -L $pkg | grep copyright || echo /usr/share/doc/$pkg/copyright)
    if ! test -f "$f"
    then
        echo "?"
        continue
    fi
    # Paper over some corner cases here.
    # C/C++ core system libraries are complex, best treated specially.
    # libbz2-1.0 is funky, debian build but not upstream source claims to be GPL; probably they meant Files: debian/* was GPL.
    case $pkg in
    libc6|libgcc1|libstdc++6|libbz2-1.0)
        echo "  $pkg-special";;
    libjpeg-turbo8)  # copyright file is bit complicated...
        echo "  JPEG"
        echo "  RSA-MD";;
    liblzma5)  # Reading copyright file carefully shows liblzma5 itself is PD
        echo "  PD";;
    *)
        ob-parse-licenses $f;;
    esac
    echo ""
done
